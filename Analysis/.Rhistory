variation <- variation.range(cranium$procrustes, return.ID = TRUE, CI = 0.95)
## Procrustes variation ranges
variation <- variation.range(cranium$procrustes, return.ID = TRUE)
specimens_min_max <- variation$min.max
procrustes_var <- variation$range[,1]
remove.packages("landmarktest")
library(devtools)
install_github("TGuillerme/landmark-test")
library(landmarktest)
## Procrustes variation ranges
variation <- variation.range(cranium$procrustes, return.ID = TRUE, CI = 0.95)
specimens_min_max <- variation$min.max
procrustes_var <- variation$range[,1]
gridPar = gridPar(pt.bg = "white", pt.size = 0.5)
open3d()
plotRefToTarget.heat(cranium$procruste$coords[, , specimens_min_max[2]],
cranium$procruste$coords[, , specimens_min_max[1]],
col = heat.colors, pt.size = 1, col.val = procrustes_var,
plotRefToTarget.args = list(mag = 1), main = "wow!")
## Procrustes variation ranges
variation <- variation.range(cranium$procrustes, return.ID = TRUE, CI = 0.9999)
specimens_min_max <- variation$min.max
procrustes_var <- variation$range[,1]
gridPar = gridPar(pt.bg = "white", pt.size = 0.5)
open3d()
plotRefToTarget.heat(cranium$procruste$coords[, , specimens_min_max[2]],
cranium$procruste$coords[, , specimens_min_max[1]],
col = heat.colors, pt.size = 1, col.val = procrustes_var,
plotRefToTarget.args = list(mag = 1), main = "wow!")
## Procrustes variation ranges
variation <- variation.range(cranium$procrustes, return.ID = TRUE, CI = 0.75)
specimens_min_max <- variation$min.max
procrustes_var <- variation$range[,1]
gridPar = gridPar(pt.bg = "white", pt.size = 0.5)
open3d()
plotRefToTarget.heat(cranium$procruste$coords[, , specimens_min_max[2]],
cranium$procruste$coords[, , specimens_min_max[1]],
col = heat.colors, pt.size = 1, col.val = procrustes_var,
plotRefToTarget.args = list(mag = 1), main = "wow!")
## Procrustes variation ranges
variation <- variation.range(cranium$procrustes, return.ID = TRUE, CI = 0.75)
specimens_min_max <- variation$min.max
procrustes_var <- variation$range[,1]
gridPar = gridPar(pt.bg = "white", pt.size = 0.5)
open3d()
plotRefToTarget.heat(cranium$procruste$coords[, , specimens_min_max[2]],
cranium$procruste$coords[, , specimens_min_max[1]],
col = heat.colors, pt.size = 1, col.val = procrustes_var,
plotRefToTarget.args = list(mag = 1))
## Procrustes variation ranges
variation <- variation.range(cranium$procrustes, return.ID = TRUE, CI = 0.75)
specimens_min_max <- variation$min.max
procrustes_var <- variation$range[,1]
gridPar = gridPar(pt.bg = "white", pt.size = 0.5)
open3d()
plotRefToTarget.heat(cranium$procruste$coords[, , specimens_min_max[2]],
cranium$procruste$coords[, , specimens_min_max[1]],
col = heat.colors, pt.size = 1, col.val = procrustes_var,
plotRefToTarget.args = list(mag = 1))
## Procrustes variation ranges
variation <- variation.range(cranium$procrustes, return.ID = TRUE, CI = 0.5)
specimens_min_max <- variation$min.max
procrustes_var <- variation$range[,1]
gridPar = gridPar(pt.bg = "white", pt.size = 0.5)
open3d()
plotRefToTarget.heat(cranium$procruste$coords[, , specimens_min_max[2]],
cranium$procruste$coords[, , specimens_min_max[1]],
col = heat.colors, pt.size = 1, col.val = procrustes_var,
plotRefToTarget.args = list(mag = 1))
remove(landmarktest)
## Loading the libraries (and installing if necessary)
if(!require(devtools)) install.packages("devtools")
if(!require(geomorph)) install.packages("geomorph")
if(!require(dispRity)) install_github("TGuillerme/dispRity")
if(!require(landmarktest)) install_github("TGuillerme/landmark-test")
set.seed(1)
## Loading a dataset
load("../Data/Processed/wombat_ursinus.Rda")
## Selecting a partition
cranium <- land_data$cranium
## Procrustes variation ranges
variation_all_PC_axis <- variation.range(cranium$procrustes, return.ID = TRUE, CI = 0.5, ordination = TRUE, axis = 1)
specimens_min_max <- variation_all_PC_axis$min.max
## Procrustes variation ranges
variation_all_PC_axis <- variation.range(cranium$procrustes, return.ID = TRUE, CI = 0.5, ordination = TRUE, axis = 1)
specimens_min_max <- variation_all_PC_axis$min.max
remove(landmarktest)
remove.packages("landmarktest")
## Loading the libraries (and installing if necessary)
if(!require(devtools)) install.packages("devtools")
if(!require(geomorph)) install.packages("geomorph")
if(!require(dispRity)) install_github("TGuillerme/dispRity")
if(!require(landmarktest)) install_github("TGuillerme/landmark-test")
set.seed(1)
## Procrustes variation ranges
variation_all_PC_axis <- variation.range(cranium$procrustes, return.ID = TRUE, CI = 0.5, ordination = TRUE, axis = 1)
specimens_min_max <- variation_all_PC_axis$min.max
variation_all_PC_axis
## Procrustes variation ranges
variation <- variation.range(cranium$procrustes, return.ID = TRUE, CI = 0.5)
## Procrustes variation ranges
variation <- variation.range(cranium$procrustes, return.ID = TRUE, CI = 0.5)
## Loading a dataset
load("../Data/Processed/wombat_ursinus.Rda")
## Selecting a partition
cranium <- land_data$cranium
## Procrustes variation ranges
variation <- variation.range(cranium$procrustes, return.ID = TRUE, CI = 0.5)
specimens_min_max <- variation$min.max
procrustes_var <- variation$range[,1]
## Procrustes variation ranges
variation_all_PC_axis <- variation.range(cranium$procrustes, return.ID = TRUE, CI = 0.5, ordination = TRUE, axis = 1)
specimens_min_max <- variation_all_PC_axis$min.max
i
head(variation)
head(variation_all_PC_axis)
cranium$ordination
plotTangentSpace(land_data$cranium$procrustes)
plotTangentSpace(land_data$cranium$procrustes$coords)
Cranium_PCA=plotTangentSpace(land_data$cranium$procrustes$coords)
gridPar = gridPar(pt.bg = "white", pt.size = 0.5)
open3d()
plotRefToTarget.heat(Cranium_PCA$pc.shapes$PC1min,
Cranium_PCA$pc.shapes$PC1max,
col = heat.colors, pt.size = 1, col.val = procrustes_var,
plotRefToTarget.args = list(mag = 1))
## Loading a dataset
#loading the below loads objects called land_data, NOT "wombat"
load("../Data/Processed/wombat.Rda")
AllWombats<-land_data
load("../Data/Processed/wombat_krefftii.Rda")
NHNW<-land_data
load("../Data/Processed/wombat_latifrons.Rda")
SHNW<-land_data
load("../Data/Processed/wombat_ursinus.Rda")
CW<-land_data
Cranium_PCA=plotTangentSpace(CW$cranium$procrustes$coords)
CW_Cranium_PCA=plotTangentSpace(CW$cranium$procrustes$coords)
CW_Cranium_PCA=plotTangentSpace(CW$cranium$procrustes$coords)
SHNW_Cranium_PCA=plotTangentSpace(CW$cranium$procrustes$coords)
NHNW_Cranium_PCA=plotTangentSpace(CW$cranium$procrustes$coords)
CW_mandible_PCA=plotTangentSpace(CW$mandible$procrustes$coords)
SHNW_mandible_PCA=plotTangentSpace(CW$mandible$procrustes$coords)
NHNW_mandible_PCA=plotTangentSpace(CW$mandible$procrustes$coords)
heatplot_PC1<-function (Procrustes_coords; required_PC){
heatplot_PC1<-function (Procrustes_coords, required_PC){
PCA=plotTangentSpace(Procrustes_coords)
gridPar = gridPar(pt.bg = "white", pt.size = 0.5)
open3d()
plotRefToTarget.heat(PCA$pc.shapes$required_PCmin,
PCA$pc.shapes$required_PCmax,
col = heat.colors, pt.size = 1, col.val = procrustes_var,
plotRefToTarget.args = list(mag = 1))
}
heatplot_PCs<-function (Procrustes_coords, required_PC){
PCA=plotTangentSpace(Procrustes_coords)
gridPar = gridPar(pt.bg = "white", pt.size = 0.5)
open3d()
plotRefToTarget.heat(PCA$pc.shapes$required_PCmin,
PCA$pc.shapes$required_PCmax,
col = heat.colors, pt.size = 1, col.val = procrustes_var,
plotRefToTarget.args = list(mag = 1))
}
heatplot_PCs(CW$cranium$procrustes$coords)
heatplot_PCs<-function (Procrustes_coords){
PCA=plotTangentSpace(Procrustes_coords)
gridPar = gridPar(pt.bg = "white", pt.size = 0.5)
open3d()
plotRefToTarget.heat(PCA$pc.shapes$PC1min,
PCA$pc.shapes$PC1max,
col = heat.colors, pt.size = 1, col.val = procrustes_var,
plotRefToTarget.args = list(mag = 1))
}
heatplot_PCs(CW$cranium$procrustes$coords, PC1)
heatplot_PCs(CW$cranium$procrustes$coords, "PC1")
heatplot_PCs<-function (Procrustes_coords){
PCA=plotTangentSpace(Procrustes_coords)
gridPar = gridPar(pt.bg = "white", pt.size = 0.5)
open3d()
plotRefToTarget.heat(PCA$pc.shapes$PC1min
PCA$pc.shapes$PC1max,
heatplot_PCs<-function (Procrustes_coords){
PCA=plotTangentSpace(Procrustes_coords)
gridPar = gridPar(pt.bg = "white", pt.size = 0.5)
open3d()
plotRefToTarget.heat(PCA$pc.shapes$PC1min,
PCA$pc.shapes$PC1max,
col = heat.colors, pt.size = 1, col.val = procrustes_var,
plotRefToTarget.args = list(mag = 1))
}
heatplot_PCs(CW$cranium$procrustes$coords)
heatplot_PCs(CW$cranium$procrustes$coords)
heatplot_PCs(CW$cranium$procrustes$coords)
heatplot_PCs(SHNWW$cranium$procrustes$coords)
heatplot_PCs(SHNW$cranium$procrustes$coords)
heatplot_PCs(NHNW$cranium$procrustes$coords)
heatplot_PCs(CW$mandible$procrustes$coords)
heatplot_PCs(CW$mandible$procrustes$coords)
plotTangentSpace(CW$mandible$procrustes$coords)
PCA=
PCA<-plotTangentSpace(CW$mandible$procrustes$coords)
PCA$pc.shapes$PC1min
heatplot_PCs(CW$cranium$procrustes$coords)
heatplot_PCs(SHNW$cranium$procrustes$coords)
heatplot_PCs(NHNW$cranium$procrustes$coords)
heatplot_PCs<-function (Procrustes_coords){
PCA=plotTangentSpace(Procrustes_coords)
gridPar = gridPar(pt.bg = "white", pt.size = 0.5)
open3d()
plotRefToTarget.heat(PCA$pc.shapes$PC1min,
PCA$pc.shapes$PC1max,
col = heat.colors, pt.size = 0.5, col.val = procrustes_var,
plotRefToTarget.args = list(mag = 1))
}
heatplot_PCs(CW$cranium$procrustes$coords)
heatplot_PCs(CW$cranium$procrustes$coords)
heatplot_PCs<-function (Procrustes_coords){
PCA=plotTangentSpace(Procrustes_coords)
gridPar = gridPar(pt.bg = "white", pt.size = 0.5)
open3d()
plotRefToTarget.heat(PCA$pc.shapes$PC1min,
PCA$pc.shapes$PC1max,
col = heat.colors, pt.size = 0.5, col.val = procrustes_var,
plotRefToTarget.args = list(mag = 1))
}
heatplot_PCs(CW$cranium$procrustes$coords)
?variation.range
gridPar = gridPar(pt.bg = "white", pt.size = 0.5)
s
heatplot_PCs<-function (Procrustes_coords){
PCA=plotTangentSpace(Procrustes_coords)
gridPar = gridPar(pt.bg = "white", pt.size = 0.5)
open3d()
plotRefToTarget.heat(PCA$pc.shapes$PC1min,
PCA$pc.shapes$PC1max,
col = heat.colors, pt.size = 0.9, col.val = procrustes_var,
plotRefToTarget.args = list(mag = 1))
}
heatplot_PCs(CW$cranium$procrustes$coords)
heatplot_PCs<-function (Procrustes_coords){
PCA=plotTangentSpace(Procrustes_coords)
gridPar = gridPar(pt.bg = "white", pt.size = 0.5)
open3d()
plotRefToTarget.heat(PCA$pc.shapes$PC1min,
PCA$pc.shapes$PC1max,
col = heat.colors, pt.size = 0.8, col.val = procrustes_var,
plotRefToTarget.args = list(mag = 1))
}
heatplot_PCs(CW$cranium$procrustes$coords)
i
heatplot_PCs(CW$cranium$procrustes$coords)
head(cranium$procrustes)
Classifiers=list("cranium"=cranium, "mandible"=mandible)
PC=list()
for (i in 1:length(Classifiers)){
#prep classifiers
names <- dimnames((land_data)[[i]]$procrustes$coords)[[3]] # Gives all IDs in data
Species <- as.factor(Classifiers[[i]]$Species)
Locality <- as.factor(Classifiers[[i]]$Locality)
Environment <- as.factor(Classifiers[[i]]$Environment)
Sex <- as.factor(Classifiers[[i]]$Sex)
levels(Sex)<-c(levels(Sex),"U")  #Add the extra level to your factor
Sex[is.na(Sex)] <- "U"           #Change NA to "U"
levels(Environment)<-c(levels(Environment)," ")
Environment[is.na(Environment)] <- " "           #Change NA to "U"
#prep pc scores
PC[[i]] <- data.frame(land_data[[i]]$ordination$x[,1], land_data[[i]]$ordination$x[,2])#Why does this not work??
}
names(PC)<-names(Classifiers)
plot.new()
ggplot(WomCrPC, aes(x=WomCrPC1Scores, y=WomCrPC2Scores, colour=Species, fill=Species))+
geom_convexhull(alpha=.4)+
scale_shape_manual(values = c(21, 22, 24))+
geom_point(aes(shape=Sex, fill=Species), color="black", size=4, stroke = 0.75)+
geom_text(aes(label=Environment), size=5, hjust=1.35, vjust=0.25, colour="black")+
labs(x = "Principal component 1", y = "Principal component 2")+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), legend.position="none",
axis.text=element_text(size=14), axis.title=element_text(size=16))
WomCrPC1Scores <- land_data$cranium$ordination$x[,1]
WomCrPC2Scores <- land_data$cranium$ordination$x[,2]
WomCrPC <- data.frame(WomCrPC1Scores, WomCrPC2Scores)
levels(Sex)<-c(levels(Sex),"U")  #Add the extra level to your factor
Sex[is.na(Sex)] <- "U"           #Change NA to "U"
levels(Environment)<-c(levels(Environment)," ")
Environment[is.na(Environment)] <- " "           #Change NA to "U"
plot.new()
ggplot(WomCrPC, aes(x=WomCrPC1Scores, y=WomCrPC2Scores, colour=Species, fill=Species))+
geom_convexhull(alpha=.4)+
scale_shape_manual(values = c(21, 22, 24))+
geom_point(aes(shape=Sex, fill=Species), color="black", size=4, stroke = 0.75)+
geom_text(aes(label=Environment), size=5, hjust=1.35, vjust=0.25, colour="black")+
labs(x = "Principal component 1", y = "Principal component 2")+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), legend.position="none",
axis.text=element_text(size=14), axis.title=element_text(size=16))
## Loading the libraries (and installing if necessary)
if(!require(geomorph)) install.packages("geomorph")
source("../Functions/utilities.R")
library(ggplot2)
# Install and load ggConvexHull
library(devtools)
devtools::install_github("cmartin/ggConvexHull")
library(ggConvexHull)
source("../Functions/utilities.R")
set.seed(1)
library(landmarktest)
# load the data
##the below loads the Wombat.Rda from the processed data (i.e. partitions, procrustes data, and ordination results); but the object is NOT called the file name called under "load", it is "land_data"
load("../Data/Processed/wombat.Rda")
#read classifiers
cranium<-read.csv("../Data/Raw/classifier_cranium_wombat.csv")
mandible<-read.csv("../Data/Raw/classifier_mandible_wombat.csv")
Classifiers=list("cranium"=cranium, "mandible"=mandible)
PC=list()
for (i in 1:length(Classifiers)){
#prep classifiers
names <- dimnames((land_data)[[i]]$procrustes$coords)[[3]] # Gives all IDs in data
Species <- as.factor(Classifiers[[i]]$Species)
Locality <- as.factor(Classifiers[[i]]$Locality)
Environment <- as.factor(Classifiers[[i]]$Environment)
Sex <- as.factor(Classifiers[[i]]$Sex)
levels(Sex)<-c(levels(Sex),"U")  #Add the extra level to your factor
Sex[is.na(Sex)] <- "U"           #Change NA to "U"
levels(Environment)<-c(levels(Environment)," ")
Environment[is.na(Environment)] <- " "           #Change NA to "U"
#prep pc scores
PC[[i]] <- data.frame(land_data[[i]]$ordination$x[,1], land_data[[i]]$ordination$x[,2])#Why does this not work??
}
names(PC)<-names(Classifiers)
names <- dimnames(land_data$cranium$procrustes$coords)[[3]] # Gives all IDs in data
Classifiers=list("cranium"=cranium, "mandible"=mandible)
PC=list()
for (i in 1:length(Classifiers)){
#prep classifiers
names <- dimnames((land_data)[[i]]$procrustes$coords)[[3]] # Gives all IDs in data
Species <- as.factor(Classifiers[[i]]$Species)
Locality <- as.factor(Classifiers[[i]]$Locality)
Environment <- as.factor(Classifiers[[i]]$Environment)
Sex <- as.factor(Classifiers[[i]]$Sex)
levels(Sex)<-c(levels(Sex),"U")  #Add the extra level to your factor
Sex[is.na(Sex)] <- "U"           #Change NA to "U"
levels(Environment)<-c(levels(Environment)," ")
Environment[is.na(Environment)] <- " "           #Change NA to "U"
#prep pc scores
PC[[i]] <- data.frame(land_data[[i]]$ordination$x[,1], land_data[[i]]$ordination$x[,2])#Why does this not work??
}
names(PC)<-names(Classifiers)
PC
WomCrPC1Scores <- land_data$cranium$ordination$x[,1]
WomCrPC2Scores <- land_data$cranium$ordination$x[,2]
WomCrPC <- data.frame(WomCrPC1Scores, WomCrPC2Scores)
Classifiers=list("cranium"=cranium, "mandible"=mandible)
PC=list()
for (i in 1:length(Classifiers)){
#prep classifiers
names <- dimnames((land_data)[[i]]$procrustes$coords)[[3]] # Gives all IDs in data
Species <- as.factor(Classifiers[[i]]$Species)
Locality <- as.factor(Classifiers[[i]]$Locality)
Environment <- as.factor(Classifiers[[i]]$Environment)
Sex <- as.factor(Classifiers[[i]]$Sex)
levels(Sex)<-c(levels(Sex),"U")  #Add the extra level to your factor
Sex[is.na(Sex)] <- "U"           #Change NA to "U"
levels(Environment)<-c(levels(Environment)," ")
Environment[is.na(Environment)] <- " "           #Change NA to "U"
#prep pc scores
PC[[i]] <- data.frame(land_data[[i]]$ordination$x[,1], land_data[[i]]$ordination$x[,2])#Why does this not work??
}
names(PC)<-names(Classifiers)
head(PC)
WomCrPC1Scores <- land_data$cranium$ordination$x[,1]
WomCrPC2Scores <- land_data$cranium$ordination$x[,2]
WomCrPC <- data.frame(WomCrPC1Scores, WomCrPC2Scores)
plot.new()
ggplot(WomCrPC, aes(x=WomCrPC1Scores, y=WomCrPC2Scores, colour=Species, fill=Species))+
geom_convexhull(alpha=.4)+
scale_shape_manual(values = c(21, 22, 24))+
geom_point(aes(shape=Sex, fill=Species), color="black", size=4, stroke = 0.75)+
geom_text(aes(label=Environment), size=5, hjust=1.35, vjust=0.25, colour="black")+
labs(x = "Principal component 1", y = "Principal component 2")+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), legend.position="none",
axis.text=element_text(size=14), axis.title=element_text(size=16))
names <- dimnames(land_data$cranium$procrustes$coords)[[3]] # Gives all IDs in data
Species <- as.factor(cranium$Species)
Locality <- as.factor(cranium$Locality)
Environment <- as.factor(cranium$Environment)
Sex <- as.factor(cranium$Sex)
WomCrPC1Scores <- land_data$cranium$ordination$x[,1]
WomCrPC2Scores <- land_data$cranium$ordination$x[,2]
WomCrPC <- data.frame(WomCrPC1Scores, WomCrPC2Scores)
levels(Sex)<-c(levels(Sex),"U")  #Add the extra level to your factor
Sex[is.na(Sex)] <- "U"           #Change NA to "U"
levels(Environment)<-c(levels(Environment)," ")
Environment[is.na(Environment)] <- " "           #Change NA to "U"
e
plot.new()
ggplot(WomCrPC, aes(x=WomCrPC1Scores, y=WomCrPC2Scores, colour=Species, fill=Species))+
geom_convexhull(alpha=.4)+
scale_shape_manual(values = c(21, 22, 24))+
geom_point(aes(shape=Sex, fill=Species), color="black", size=4, stroke = 0.75)+
geom_text(aes(label=Environment), size=5, hjust=1.35, vjust=0.25, colour="black")+
labs(x = "Principal component 1", y = "Principal component 2")+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), legend.position="none",
axis.text=element_text(size=14), axis.title=element_text(size=16))
Classifiers=list("cranium"=cranium, "mandible"=mandible)
PC=list()
for (i in 1:length(Classifiers)){
#prep classifiers
names <- dimnames((land_data)[[i]]$procrustes$coords)[[3]] # Gives all IDs in data
Species <- as.factor(Classifiers[[i]]$Species)
Locality <- as.factor(Classifiers[[i]]$Locality)
Environment <- as.factor(Classifiers[[i]]$Environment)
Sex <- as.factor(Classifiers[[i]]$Sex)
levels(Sex)<-c(levels(Sex),"U")  #Add the extra level to your factor
Sex[is.na(Sex)] <- "U"           #Change NA to "U"
levels(Environment)<-c(levels(Environment)," ")
Environment[is.na(Environment)] <- " "           #Change NA to "U"
#prep pc scores
PC[[i]] <- data.frame(land_data[[i]]$ordination$x[,1], land_data[[i]]$ordination$x[,2])#Why does this not work??
}
names(PC)<-names(Classifiers)
PC$cranium$land_data..i...ordination.x...1.
plot.new()
ggplot(PC$cranium, aes(x=PC$cranium$land_data..i...ordination.x...1., y=PC$cranium$land_data..i...ordination.x...2., colour=Species, fill=Species))+
geom_convexhull(alpha=.4)+
scale_shape_manual(values = c(21, 22, 24))+
geom_point(aes(shape=Sex, fill=Species), color="black", size=4, stroke = 0.75)+
geom_text(aes(label=Environment), size=5, hjust=1.35, vjust=0.25, colour="black")+
labs(x = "Principal component 1", y = "Principal component 2")+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), legend.position="none",
axis.text=element_text(size=14), axis.title=element_text(size=16))
PC$cranium$land_data..i...ordination.x...2.
plot.new()
ggplot(PC$cranium, aes(x=PC$cranium$land_data..i...ordination.x...1., y=PC$cranium$land_data..i...ordination.x...2., colour=Species, fill=Species))+
geom_convexhull(alpha=.4)+
scale_shape_manual(values = c(21, 22, 24))+
geom_point(aes(shape=Sex, fill=Species), color="black", size=4, stroke = 0.75)+
geom_text(aes(label=Environment), size=5, hjust=1.35, vjust=0.25, colour="black")+
labs(x = "Principal component 1", y = "Principal component 2")+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), legend.position="none",
axis.text=element_text(size=14), axis.title=element_text(size=16))
plot(PC$cranium$land_data..i...ordination.x...2., PC$cranium$land_data..i...ordination.x...1.)
PC$cranium
#in the below, it doesn't work to use PC$cranium$land_data..i...ordination.x...1. and PC$cranium$land_data..i...ordination.x...2. for x and y - not sure why?
ggplot(PC$cranium, aes(x=PC$cranium$land_data..i...ordination.x...1., y=PC$cranium$land_data..i...ordination.x...2., colour=Species, fill=Species))+
geom_convexhull(alpha=.4)+
scale_shape_manual(values = c(21, 22, 24))+
geom_point(aes(shape=Sex, fill=Species), color="black", size=4, stroke = 0.75)+
geom_text(aes(label=Environment), size=5, hjust=1.35, vjust=0.25, colour="black")+
labs(x = "Principal component 1", y = "Principal component 2")+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), legend.position="none",
axis.text=element_text(size=14), axis.title=element_text(size=16))
Classifiers=list("cranium"=cranium, "mandible"=mandible)
PC=list()
for (i in 1:length(Classifiers)){
#prep classifiers
names <- dimnames((land_data)[[i]]$procrustes$coords)[[3]] # Gives all IDs in data
Species <- as.factor(Classifiers[[i]]$Species)
Locality <- as.factor(Classifiers[[i]]$Locality)
Environment <- as.factor(Classifiers[[i]]$Environment)
Sex <- as.factor(Classifiers[[i]]$Sex)
levels(Sex)<-c(levels(Sex),"U")  #Add the extra level to your factor
Sex[is.na(Sex)] <- "U"           #Change NA to "U"
levels(Environment)<-c(levels(Environment)," ")
Environment[is.na(Environment)] <- " "           #Change NA to "U"
#prep pc scores
PC[[i]] <- data.frame(land_data[[i]]$ordination$x[,1], land_data[[i]]$ordination$x[,2])#Why does this not work??
}
names(PC)<-names(Classifiers)
names <- dimnames(land_data$cranium$procrustes$coords)[[3]] # Gives all IDs in data
Species <- as.factor(cranium$Species)
Locality <- as.factor(cranium$Locality)
Environment <- as.factor(cranium$Environment)
Sex <- as.factor(cranium$Sex)
#in the below, it doesn't work to use PC$cranium$land_data..i...ordination.x...1. and PC$cranium$land_data..i...ordination.x...2. for x and y - not sure why?
ggplot(PC$cranium, aes(x=PC$cranium$land_data..i...ordination.x...1., y=PC$cranium$land_data..i...ordination.x...2., colour=Species, fill=Species))+
geom_convexhull(alpha=.4)+
scale_shape_manual(values = c(21, 22, 24))+
geom_point(aes(shape=Sex, fill=Species), color="black", size=4, stroke = 0.75)+
geom_text(aes(label=Environment), size=5, hjust=1.35, vjust=0.25, colour="black")+
labs(x = "Principal component 1", y = "Principal component 2")+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), legend.position="none",
axis.text=element_text(size=14), axis.title=element_text(size=16))
plot.new()
#in the below, it doesn't work to use PC$cranium$land_data..i...ordination.x...1. and PC$cranium$land_data..i...ordination.x...2. for x and y - not sure why?
ggplot(PC$cranium, aes(x=PC$cranium$land_data..i...ordination.x...1., y=PC$cranium$land_data..i...ordination.x...2., colour=Species, fill=Species))+
geom_convexhull(alpha=.4)+
scale_shape_manual(values = c(21, 22, 24))+
geom_point(aes(shape=Sex, fill=Species), color="black", size=4, stroke = 0.75)+
geom_text(aes(label=Environment), size=5, hjust=1.35, vjust=0.25, colour="black")+
labs(x = "Principal component 1", y = "Principal component 2")+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), legend.position="none",
axis.text=element_text(size=14), axis.title=element_text(size=16))
Classifiers=list("cranium"=cranium, "mandible"=mandible)
PC=list()
for (i in 1:length(Classifiers)){
#prep classifiers
names <- dimnames((land_data)[[i]]$procrustes$coords)[[3]] # Gives all IDs in data
Species <- as.factor(Classifiers[[i]]$Species)
Locality <- as.factor(Classifiers[[i]]$Locality)
Environment <- as.factor(Classifiers[[i]]$Environment)
Sex <- as.factor(Classifiers[[i]]$Sex)
levels(Sex)<-c(levels(Sex),"U")  #Add the extra level to your factor
Sex[is.na(Sex)] <- "U"           #Change NA to "U"
levels(Environment)<-c(levels(Environment)," ")
Environment[is.na(Environment)] <- " "           #Change NA to "U"
#prep pc scores
PC[[i]] <- data.frame(land_data[[i]]$ordination$x[,1], land_data[[i]]$ordination$x[,2])#Why does this not work??
}
names(PC)<-names(Classifiers)
Species
Locality
length(Species)
Species
